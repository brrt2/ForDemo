<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="81" passed="81">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="82" started-at="2017-11-20T18:22:57Z" finished-at="2017-11-20T18:22:57Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="82" started-at="2017-11-20T18:22:57Z" finished-at="2017-11-20T18:22:57Z">
      <class name="gameManagement.moveManagement.MoveHistoryTest">
        <test-method status="PASS" signature="testAddToArchive()[pri:0, instance:gameManagement.moveManagement.MoveHistoryTest@1cd072a9]" name="testAddToArchive" duration-ms="0" started-at="2017-11-20T19:22:57Z" finished-at="2017-11-20T19:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToArchive -->
      </class> <!-- gameManagement.moveManagement.MoveHistoryTest -->
      <class name="gameManagement.moveManagement.MoveFactoryTest">
        <test-method status="PASS" signature="testCreateMove()[pri:0, instance:gameManagement.moveManagement.MoveFactoryTest@e580929]" name="testCreateMove" duration-ms="0" started-at="2017-11-20T19:22:57Z" finished-at="2017-11-20T19:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMove -->
      </class> <!-- gameManagement.moveManagement.MoveFactoryTest -->
      <class name="gameManagement.BoardTest">
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="5" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testClearBoard(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testClearBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearBoard -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testMarkTile(int, java.lang.String)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testMarkTile" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="markTile" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkTile -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
        <test-method status="PASS" signature="testPopulateTheBoard(int)[pri:0, instance:gameManagement.BoardTest@6bdf28bb]" name="testPopulateTheBoard" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="populateBoard" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopulateTheBoard -->
      </class> <!-- gameManagement.BoardTest -->
      <class name="gameManagement.validation.InputValidatorTest">
        <test-method status="PASS" signature="testCheckIfTileTaken()[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testCheckIfTileTaken" duration-ms="0" started-at="2017-11-20T19:22:57Z" finished-at="2017-11-20T19:22:57Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The selected tile is already taken !]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The selected tile is already taken !
	at gameManagement.validation.InputValidator.checkIfTileTaken(InputValidator.java:40)
	at gameManagement.validation.InputValidatorTest.testCheckIfTileTaken(InputValidatorTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckIfTileTaken -->
        <test-method status="PASS" signature="testValidateAdjacentSignsToWin()[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateAdjacentSignsToWin" duration-ms="41" started-at="2017-11-20T19:22:57Z" finished-at="2017-11-20T19:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateAdjacentSignsToWin -->
        <test-method status="PASS" signature="testValidateBoardDimensions()[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateBoardDimensions" duration-ms="0" started-at="2017-11-20T19:22:57Z" finished-at="2017-11-20T19:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateBoardDimensions -->
        <test-method status="PASS" signature="testValidateMove(int)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateMove" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="moveValidator" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3405678]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[The provided number is outside the board ! ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: The provided number is outside the board ! 
	at gameManagement.validation.InputValidator.validateMove(InputValidator.java:31)
	at gameManagement.validation.InputValidatorTest.testValidateMove(InputValidatorTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateMove -->
        <test-method status="PASS" signature="testValidateMove(int)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateMove" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="moveValidator" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[The provided number is outside the board ! ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: The provided number is outside the board ! 
	at gameManagement.validation.InputValidator.validateMove(InputValidator.java:31)
	at gameManagement.validation.InputValidatorTest.testValidateMove(InputValidatorTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateMove -->
        <test-method status="PASS" signature="testValidateMove(int)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateMove" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="moveValidator" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[The provided number is outside the board ! ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: The provided number is outside the board ! 
	at gameManagement.validation.InputValidator.validateMove(InputValidator.java:31)
	at gameManagement.validation.InputValidatorTest.testValidateMove(InputValidatorTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateMove -->
        <test-method status="PASS" signature="testValidateMove(int)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateMove" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="moveValidator" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-17]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[The provided number is outside the board ! ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: The provided number is outside the board ! 
	at gameManagement.validation.InputValidator.validateMove(InputValidator.java:31)
	at gameManagement.validation.InputValidatorTest.testValidateMove(InputValidatorTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateMove -->
        <test-method status="PASS" signature="testValidateMove(int)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateMove" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="moveValidator" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-500]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[The provided number is outside the board ! ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: The provided number is outside the board ! 
	at gameManagement.validation.InputValidator.validateMove(InputValidator.java:31)
	at gameManagement.validation.InputValidatorTest.testValidateMove(InputValidatorTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateMove -->
        <test-method status="PASS" signature="testValidateMove(int)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidateMove" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="moveValidator" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[200000]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[The provided number is outside the board ! ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: The provided number is outside the board ! 
	at gameManagement.validation.InputValidator.validateMove(InputValidator.java:31)
	at gameManagement.validation.InputValidatorTest.testValidateMove(InputValidatorTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateMove -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fdfs_ffsdf fds]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fd@ffds^fdfd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fdsfs 34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gfdg- 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fsdf/fdsf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[aBcD%eFgH]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameFalse(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameFalse" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorFalse" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[f-4-x fdfsdf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameFalse -->
        <test-method status="PASS" signature="testValidatePlayerNameTrue(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameTrue" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorTrue" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tomek]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameTrue -->
        <test-method status="PASS" signature="testValidatePlayerNameTrue(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameTrue" duration-ms="1" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorTrue" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[adam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameTrue -->
        <test-method status="PASS" signature="testValidatePlayerNameTrue(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameTrue" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorTrue" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bartek]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameTrue -->
        <test-method status="PASS" signature="testValidatePlayerNameTrue(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameTrue" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorTrue" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bartek dominika]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameTrue -->
        <test-method status="PASS" signature="testValidatePlayerNameTrue(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameTrue" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorTrue" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kamil]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameTrue -->
        <test-method status="PASS" signature="testValidatePlayerNameTrue(java.lang.String)[pri:0, instance:gameManagement.validation.InputValidatorTest@4c203ea1]" name="testValidatePlayerNameTrue" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="nameValidatorTrue" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ryszard adam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatePlayerNameTrue -->
      </class> <!-- gameManagement.validation.InputValidatorTest -->
      <class name="gameManagement.RefereeTest">
        <test-method status="PASS" signature="testCheckDiagonal(players.Player)[pri:0, instance:gameManagement.RefereeTest@7c75222b]" name="testCheckDiagonal" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="dp" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bartek]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDiagonal -->
        <test-method status="PASS" signature="testCheckDiagonal2(players.Player)[pri:0, instance:gameManagement.RefereeTest@7c75222b]" name="testCheckDiagonal2" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="dp" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bartek]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDiagonal2 -->
        <test-method status="PASS" signature="testCheckIfDraw()[pri:0, instance:gameManagement.RefereeTest@7c75222b]" name="testCheckIfDraw" duration-ms="0" started-at="2017-11-20T19:22:57Z" finished-at="2017-11-20T19:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckIfDraw -->
        <test-method status="PASS" signature="testCheckIfWonVertically(players.Player)[pri:0, instance:gameManagement.RefereeTest@7c75222b]" name="testCheckIfWonVertically" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="dp" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bartek]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckIfWonVertically -->
        <test-method status="PASS" signature="testCheckIfWonHorizontally(players.Player)[pri:0, instance:gameManagement.RefereeTest@7c75222b]" name="testCheckIfWonHorizontally" duration-ms="0" started-at="2017-11-20T19:22:57Z" data-provider="dp" finished-at="2017-11-20T19:22:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bartek]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckIfWonHorizontally -->
      </class> <!-- gameManagement.RefereeTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
